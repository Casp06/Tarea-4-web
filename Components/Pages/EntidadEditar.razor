@page "/entidad/{tipo}/editar"
@page "/entidad/{tipo}/editar/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager Nav
@inject IJSRuntime JSx
@inject SerieContext Sc

<PageTitle> Editar Entidad</PageTitle>

<h3>Entidad @Tipo</h3>

<EditForm Model="instancia" OnValidSubmit="GuardarDatos">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="instancia.Nombre" />
    </div>

    <div class="form-group">
        <label for="Pais">Pa√≠s</label>
        <InputText id="Pais" class="form-control" @bind-Value="instancia.Pais" />
    </div>

    <div class="form-group">
        <label for="Idioma">Idioma</label>
        <InputText id="Idioma" class="form-control" @bind-Value="instancia.Idioma" />
    </div>

    <div class="form-group">
        <label for="Resumen">Resumen</label>
        <InputText id="Resumen" class="form-control" @bind-Value="instancia.Resumen" />
    </div>

    <div class="form-group">
        <label for="Foto">Foto</label>
        <input id="Foto" type="url" class="form-control" @bind="instancia.FotoUrl" />
    </div>

    

<h4>Personajes</h4>
<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Apodo</th>
            <th>Raza</th>
            <th>Foto</th>
            <th>Edad</th>
            <th>Poder Carateritistico</th>
            <td><button class="btn btn-primary" @onclick="agregarPersonaje">Agregar Personaje</button></td>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in instancia.Personajes){
        <tr>
            <td><InputText @bind-Value="@item.Nombre" class="form-control"/></td>
            <td><InputText @bind-Value="@item.Apodo" class="form-control"/></td>
            <td><InputText @bind-Value="@item.Raza" class="form-control"/></td>
            <td><InputText id="Foto" type="url" class="form-control" @bind-Value="item.FotoUrl" /></td>
            <td><InputNumber @bind-Value="@item.Edad" class="form-control"/></td>
            <td><InputText @bind-Value="@item.PoderCaracteristico" class="form-control"/></td>
        </tr>   
        }
    </tbody>
</table>
    
    <button  class="btn btn-success" type="submit">Guardar</button>
</EditForm>

@code {
    [Parameter]
    public string Tipo { get; set; } = "";

    [Parameter]
    public int Id { get; set; } = 0;

    void agregarPersonaje(){
        instancia.Personajes.Add(new Personaje());
        StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {
        switch (Tipo)
        {
            case "libros":
                tipoEntidad = TipoEntidad.Libro;
                break;
            case "peliculas":
                tipoEntidad = TipoEntidad.Pelicula;
                break;
            case "series":
                tipoEntidad = TipoEntidad.Serie;
                break;
            default:
                //await JSx.InvokeVoidAsync("alert", "Tipo de entidad no valido");
                Nav.NavigateTo("/");
                break;
        }
    }

    private SeriePeliculaLibro instancia = new SeriePeliculaLibro();

    TipoEntidad tipoEntidad = TipoEntidad.Libro;

    private async Task GuardarDatos()
    {
        instancia.Tipo = tipoEntidad;
        Console.WriteLine("Si se pudo");

        if (instancia.Id > 0)
        {
            Sc.SeriePeliculaLibros.Update(instancia);
        }
        else
        {
            Sc.SeriePeliculaLibros.Add(instancia);
        }

        await Sc.SaveChangesAsync();
        await JSx.InvokeVoidAsync("alert", "Datos guardados");
        Nav.NavigateTo($"/entidad/{Tipo}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id > 0)
            {
                instancia = Sc.SeriePeliculaLibros.FirstOrDefault(x => x.Id == Id) ?? new SeriePeliculaLibro();
                StateHasChanged();
            }
        }
    }
}
