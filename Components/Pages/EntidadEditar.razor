@page "/entidad/{tipo}/editar"
@rendermode InteractiveServer
@inject NavigationManager Nav
@inject IJSRuntime JSx
@inject SerieContext Sc

<PageTitle> Editar Entidad</PageTitle>

<h3>Entidad @Tipo</h3>

<EditForm Model="instancia" OnValidSubmit="GuardarDatos">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="instancia.Nombre" />
    </div>

    <div class="form-group">
        <label for="Pais">Pa√≠s</label>
        <InputText id="Pais" class="form-control" @bind-Value="instancia.Pais" />
    </div>

    <div class="form-group">
        <label for="Idioma">Idioma</label>
        <InputText id="Idioma" class="form-control" @bind-Value="instancia.Idioma" />
    </div>

    <div class="form-group">
        <label for="Resumen">Resumen</label>
        <InputText id="Resumen" class="form-control" @bind-Value="instancia.Resumen" />
    </div>

    <div class="form-group">
        <label for="Foto">Foto</label>
        <input id="Foto" type="url" class="form-control" @bind="instancia.FotoUrl" />
    </div>

    <button type="submit" class="btn btn-outline-info">Guardar</button>
</EditForm>

@code {
    [Parameter]
    public string Tipo { get; set; } = "";

    protected override async Task OnParametersSetAsync(){
        switch (Tipo){
            case "libros":
                tipoEntidad = TipoEntidad.Libro;
                break;
            case "peliculas":
                tipoEntidad = TipoEntidad.Pelicula;
                break;
            case "series":
                tipoEntidad = TipoEntidad.Serie;
                break;
            default:
                //await JSx.InvokeVoidAsync("alert", "Tipo de entidad no valido");
                Nav.NavigateTo("/");
                break;
        }
    }

    private SeriePeliculaLibro instancia = new SeriePeliculaLibro();

        TipoEntidad tipoEntidad = TipoEntidad.Libro;

    private async Task GuardarDatos()
    {
        instancia.Tipo = tipoEntidad;
        Console.WriteLine("Si se pudo");
        Sc.SeriePeliculaLibros.Add(instancia);
        await Sc.SaveChangesAsync();
        await JSx.InvokeVoidAsync("alert", "Datos guardados");
        Nav.NavigateTo($"/entidad/{Tipo}");
    }
}
